# TODO: errors on huge zero page is not properly handled yet, and once
# this testcase is run, any subsequent testcases could encounter bugs
# coming from hwpoisoned huge zero page.
TEST_TYPE=wip

#! {"error" => "madv_hard"}
#! {"error" => "madv_soft"}

ERROR=<%= param["error"] %>

EXPECTED_RETURN_CODE="EXIT"
WARN_EXPECTED=true

_prepare() {
	sysctl kernel.panic_on_warn=0
}

_cleanup() {
	page-types -b hwpoison -x
	# sysctl kernel.panic_on_warn=1
}

_control() {
	test_alloc_generic -B huge_zero -N 2 -L "mmap access:type=read:wait_after memory_error_injection:error_type=${ERROR}:access_after_injection" &
	local pid=$!
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl | tee $TMPD/pagemap1
	kill -SIGUSR1 $pid
	page-types -p $pid -a 0x700000000+10 -Nrl | tee $TMPD/pagemap2
	page-types -b thp,zero=thp,zero -Nrl | tee $TMPD/pagemap3
	local pfn=0x$(grep __H___X__t_z__ $TMPD/pagemap3 | cut -f1)

	echo "allocate huge zero page again"
	test_alloc_generic -B huge_zero -N 2 -L "mmap access:type=read:wait_after" &
	pid=$!
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl | tee $TMPD/pagemap4

	# unpoison
	page-types -b hwpoison -x -Nrl
	page-types -a $pfn+512 -Nrl
	set_return_code EXIT
}
