TEST_TYPE=wip
TEST_PRIORITY=10

ERROR_TYPE=madv_hard
ACCESS_LATER_OPTION=
INJOP=memory_error_injection:error_type=$ERROR_TYPE

# <% if param["access"] == "later" %>
# INJOP="$INJOP:access_after_injection"
# <% end %>

# TEST_PROGRAM="test_alloc_generic -B $BACKEND -N 32 -L 'start:wait_after mmap access:wait_after=1000000 $INJOP munmap:wait_before exit:wait_before' ${DEBUG:+-v}"
# TEST_PROGRAM="test_alloc_generic -B $BACKEND -N 2 -L 'start:wait_after mmap access:wait_after=1000000 $INJOP munmap:wait_before exit:wait_before' ${DEBUG:+-v}"
# FALSENEGATIVE=true
# EXPECTED_RETURN_CODE="INJECT ACCESS KILLED_IN_ACCESS"
EXPECTED_RETURN_CODE="ACCESS_SUCCEEDED"

_control() {
	# test_alloc_generic -B pagecache -n 1 -L 'start mmap access:wait_after memory_error_injection:error_type=madv_hard noop:wait_after madvise:advice=free noop:wait_after access:wait_after' &
	# test_alloc_generic -B anonymous -n 1 -L 'start mmap access:wait_after memory_error_injection:error_type=madv_hard access:wait_after access:wait_after access:wait_after' &

	test_alloc_generic -B anonymous -n 1 -L 'start mmap access:wait_after memory_error_injection:error_type=madv_hard noop:wait_after madvise:advice=free noop:wait_after access:wait_after' &
	local pid=$!
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl
	kill -SIGUSR1 $pid
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl
	kill -SIGUSR1 $pid
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl
	kill -SIGUSR1 $pid
	sleep 0.1
	page-types -p $pid -a 0x700000000+10 -Nrl
	kill -SIGUSR1 $pid
	sleep 0.1
	if check_process_status $pid ; then
		set_return_code ACCESS_SUCCEEDED
	else
		set_return_code PROCESS_KILLED
	fi
}
