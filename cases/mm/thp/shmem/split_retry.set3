#! {"thp" => "base"}
#! {"thp" => "shared_thp"}
#! {"thp" => "double_mapping"}
#! {"thp" => "pmd_split"}
#! {"thp" => "thp_split"}
#! {"thp" => "fork_pmd_split"}

TEST_TYPE=normal

<% if param["thp"] == "shared_thp" %>
FORK=fork:wait_after=1000000
EXPECTED_RETURN_CODE="HUGEPAGE_MIGRATED HUGEPAGE_MIGRATED EXIT"
<% elsif param["thp"] == "double_mapping" %>
# shmem thp doesn't support pmd split for now, so the pass of this testcase
# might not mean what we really want to test.
FORK=fork:wait_after=1000000
SPLIT_THP="split_thp:only_pmd access"
EXPECTED_RETURN_CODE="HUGEPAGE_MIGRATED HUGEPAGE_MIGRATED EXIT"
<% elsif param["thp"] == "pmd_split" %>
SPLIT_THP="split_thp:only_pmd access"
EXPECTED_RETURN_CODE="HUGEPAGE_MIGRATED EXIT"
<% elsif param["thp"] == "thp_split" %>
SPLIT_THP="split_thp access"
EXPECTED_RETURN_CODE="PAGE_MIGRATED EXIT"
<% elsif param["thp"] == "fork_pmd_split" %>
FORK=fork_pmd_split:wait_after=1000000
SPLIT_THP=""
EXPECTED_RETURN_CODE="HUGEPAGE_MIGRATED HUGEPAGE_MIGRATED EXIT"
<% else %>
EXPECTED_RETURN_CODE="HUGEPAGE_MIGRATED EXIT"
<% end %>

_prepare() {
	prepare_mmgeneric || return 1

	set_thp_defrag_never
	khpd_off

	mkfifo $TMPD/.tmp_pipe
	chmod a+x $TMPD/.tmp_pipe
}

_control() {
	set -x
	test_alloc_generic -B pagecache -N 1 -F -L "set_mempolicy:mode=bind:node=0 open:path=$SHMEM_DIR/testfile mmap access:type=syswrite access set_mempolicy:mode=default access $FORK $SPLIT_THP:wait_after noop:wait_after mbind:flags=move_all access munmap:wait_before exit:wait_before" -p $TMPD/.tmp_pipe &
	local pid=$!
	set +x

	control_split_retry $pid
}

_cleanup() {
	set_thp_defrag_always
	khpd_on
	cleanup_mmgeneric || return 1
	kill_all_subprograms
}
