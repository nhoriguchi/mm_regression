#! {"thp" => "base"}
#! {"thp" => "shared_thp"}
#! {"thp" => "double_mapping"}
#! {"thp" => "pmd_split"}
#! {"thp" => "thp_split"}

if ! which migratepages > /dev/null ; then
	echo "migratepages command not found, you need install numactl." >&2
	return 1
fi

NR_THP=2

MAPTYPE=mmap_numa:preferred_cpu_node=0:preferred_mem_node=0
FORK=
SPLIT_THP=access
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
ACTION=migratepages:busyloop

<% if param["thp"] == "shared_thp" %>
FORK=fork:wait_after
<% elsif param["thp"] == "double_mapping" %>
FORK=fork:wait_after
SPLIT_THP="split_thp:only_pmd access"
<% elsif param["thp"] == "pmd_split" %>
SPLIT_THP="split_thp:only_pmd access"
<% elsif param["thp"] == "thp_split" %>
SPLIT_THP="split_thp access"
HUGEPAGE_CHECKCODE="(HUGEPAGE_MIGRATED|HUGEPAGE_DISAPPEARED|HUGEPAGE_NOT_EXIST)"
<% end %>

_prepare() {
	prepare_mmgeneric || return 1
	test_alloc_generic -B pagecache -N $NR_THP -F -L "set_mempolicy:mode=bind:node=0 open:path=$SHMEM_DIR/testfile mmap access:type=syswrite"
}

_cleanup() {
	cleanup_mmgeneric || return 1
}

TEST_PROGRAM="test_alloc_generic -B pagecache -N $NR_THP -w $SHMEM_DIR -L '$MAPTYPE access:wait_after $FORK $SPLIT_THP noop:wait_after $ACTION munmap:wait_before exit:wait_before'"
EXPECTED_RETURN_CODE="MIGRATION_PASSED $HUGEPAGE_CHECKCODE EXIT"
