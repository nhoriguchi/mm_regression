. $TRDIR/lib/setup_mmgeneric.sh
. $TRDIR/lib/setup_memcg.sh

TEST_PROGRAM="test_alloc_generic -B normal_shmem -n 3072 -L 'start:wait_after mmap access:wait_after allocate_more munmap:wait_before exit:wait_before'"
EXPECTED_RETURN_CODE="EXIT"

_prepare() {
	local swapfile=$TDIR/swapfile
	mkdir -p $(dirname $swapfile)
	create_cgroup || return 1
	dd if=/dev/zero of=$swapfile bs=4096 count=10240 > /dev/null 2>&1
	[ $? -ne 0 ] && echo "failed to create $swapfile" && return 1
	chmod 0600 $swapfile
	mkswap $swapfile
	swapon $swapfile
	count_testcount
	if swapon -s | grep ^$swapfile > /dev/null ; then
		count_success "create swapfile"
	else
		count_failure "create swapfile"
	fi
	echo 3 > /proc/sys/vm/drop_caches

	if [ "$CGROUPVER" = v1 ] ; then
		set_cgroup_value memory test1 memory.limit_in_bytes 0x1000000 || return 1
		set_cgroup_value memory test1 memory.memsw.limit_in_bytes 0x8000000 || return 1
	elif [ "$CGROUPVER" = v2 ] ; then
		set_cgroup_value test1 memory.high 0x1000000 || return 1
		set_cgroup_value test1 memory.swap.high 0x8000000 || return 1
	fi
	set_thp_never
	return 0
}

_cleanup() {
	set_thp_always
	ipcrm --all
	swapoff $TDIR/swapfile
	rm -rf $TDIR/swapfile
	delete_cgroup
}

__get_smaps_shmem() {
    gawk '
      BEGIN {gate=0;}
      /^[0-9]/ {
          if ($0 ~ /^7000000/) {
              gate = 1;
          } else {
              gate = 0;
          }
      }
      {if (gate==1) {print $0;}}
    ' /proc/$pid/smaps
}

__get_smaps_anon() {
    gawk '
      BEGIN {gate=0;}
      /^[0-9]/ {
          if ($0 ~ /^700000c/) {
              gate = 1;
          } else {
              gate = 0;
          }
      }
      {if (gate==1) {print $0;}}
    ' /proc/$pid/smaps
}

_control() {
	local pid="$1"
	local line="$2"

	echo_log "$line"
	case "$line" in
		"after_start")
			move_process_cgroup test1 $pid || set_return_code CGCLASSIFY_FAIL
			kill -SIGUSR1 $pid
			;;
		"after_access")
			__get_smaps_shmem > $TMPD/smaps_shmem.1
			__get_smaps_anon > $TMPD/smaps_anon.1
			grep ^Swap: /proc/$pid/smaps > $TMPD/smaps_swap.1
			page-types -r -p $pid -a 0x700000000+8192 > $TMPD/page_type.1
			cat /proc/$pid/status > $TMPD/proc_status.1
			kill -SIGUSR1 $pid
			;;
		"before_munmap")
			__get_smaps_shmem > $TMPD/smaps_shmem.2
			__get_smaps_anon > $TMPD/smaps_anon.2
			grep ^Swap: /proc/$pid/smaps > $TMPD/smaps_swap.2
			page-types -r -p $pid -a 0x700000000+8192 > $TMPD/page_type.2
			cat /proc/$pid/status > $TMPD/proc_status.2
			kill -SIGUSR1 $pid
			;;
		"before_exit")
			set_return_code EXIT
			kill -SIGUSR1 $pid
			return 0
			;;
		*)
			;;
	esac
	return 1
}

_check() {
	check_system_default

	# grep -e ^Swap: -e ^Size: -e ^Rss: $TMPD/smaps_shmem.1
	# grep -e ^Swap: -e ^Size: -e ^Rss: $TMPD/smaps_shmem.2
	# grep -e ^Swap: -e ^Size: -e ^Rss: $TMPD/smaps_anon.1
	# grep -e ^Swap: -e ^Size: -e ^Rss: $TMPD/smaps_anon.2
	# echo '---'
	# grep -e ^Vm $TMPD/proc_status.1
	# echo '---'
	# grep -e ^Vm $TMPD/proc_status.2
	# echo '---'
	# cat $TMPD/smaps_swap.1
	# echo '---'
	# cat $TMPD/smaps_swap.2

	local shmsize="$(grep ^Size: $TMPD/smaps_shmem.2 2> /dev/null | awk '{print $2}')"
	local shmrss="$(grep ^Rss: $TMPD/smaps_shmem.2 2> /dev/null | awk '{print $2}')"
	local shmswap="$(grep ^Swap: $TMPD/smaps_shmem.2 2> /dev/null | awk '{print $2}')"
	local anonsize="$(grep ^Size: $TMPD/smaps_anon.2 2> /dev/null | awk '{print $2}')"
	local anonrss="$(grep ^Rss: $TMPD/smaps_anon.2 2> /dev/null | awk '{print $2}')"
	local anonswap="$(grep ^Swap: $TMPD/smaps_anon.2 2> /dev/null | awk '{print $2}')"
	local vmrss="$(grep ^VmRSS: $TMPD/proc_status.2 2> /dev/null | awk '{print $2}')"
	local vmrss="$(grep ^VmSwap: $TMPD/proc_status.2 2> /dev/null | awk '{print $2}')"

	count_testcount
	if [ "$[$anonsize - $anonrss - $anonswap]" -eq 0 ] ; then
		count_success "anonsize - anonrss - anonswap == 0"
	else
		count_failure "anonsize - anonrss - anonswap != 0"
	fi

	FALSENEGATIVE=true
	count_testcount
	if [ "$[$shmsize - $shmrss - $shmswap]" -eq 0 ] ; then
		count_success "shmsize - shmrss - shmswap == 0"
	else
		count_failure "shmsize - shmrss - shmswap != 0"
	fi
	FALSENEGATIVE=false
}
