# https://lore.kernel.org/linux-mm/20200529021224.GA345@hori.linux.bs1.fc.nec.co.jp/T/#t

soft_offline() {
	local addr=$1

	echo $addr > /sys/devices/system/memory/soft_offline_page
}

hard_offline() {
	local addr=$1

	echo $addr > /sys/devices/system/memory/hard_offline_page
}

EXPECTED_RETURN_CODE="KILLED EXIT"

_prepare() {
	sysctl vm.memory_failure_early_kill=1
}

_cleanup() {
	sysctl vm.memory_failure_early_kill=0
	rm -f tmp/testfile
}

NR_SUBPROCS=100

_control() {
	local pid1
	local pid2

	for i in $(seq $NR_SUBPROCS) ; do
		test_alloc_generic -B pagecache -N 1 -w tmp -L "mmap busyloop" &
		pid1="$pid1 $!"
		test_alloc_generic -B pagecache -N 1 -w tmp -L "mmap access:wait_after" &
		pid2="$pid2 $!"
	done

	echo pid1: $pid1
	echo pid2: $pid2

	# making sure that all test_alloc_generic processes are mapping
	# the target page cache.
	sleep 3
	local pid=$(echo $pid1 | awk '{print $1}')

	pfn=0x$(page-types -f tmp/testfile -a 0 -Nrl | grep ^0 | cut -f2)
	echo "hard_offlining pfn=${pfn}"
	hard_offline ${pfn}000
	
	killed=false
	for i in $(seq 15) ; do
		sleep 1
		if ! pgrep -f test_alloc_generic > /dev/null ; then
			killed=true
			set_return_code KILLED
			break
		fi
	done

	if [ "$killed" == false ] ; then
		echo "Some subprocesses are still alive"
		ps fj | grep test_alloc_generic
	fi

	set_return_code EXIT
}
