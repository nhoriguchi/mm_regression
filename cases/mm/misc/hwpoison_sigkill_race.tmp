# 目的不明に付き排除

TEST_PRIORITY=19
TEST_TYPE=obsolete

. $TRDIR/lib/mm.sh

soft_offline() {
	local addr=$1

	# printf "echo %lx > /sys/devices/system/memory/soft_offline_page\n" $addr
	echo $addr > /sys/devices/system/memory/soft_offline_page
}

simple_case() {
	local base=0x$(tail -n1 $TMPD/ppp | cut -f1)
	soft_offline $[$[$base + 0x300] * 4096]
	soft_offline $[$[$base + 0x100] * 4096]
	echo "unpoison all ..."
	page-types -b hwpoison -x -Nl
}

iteration1() {
	local base=0x$(tail -n1 $TMPD/ppp | cut -f1)
	for i in $(seq 100) ; do
		soft_offline $[$[$base + $[RANDOM % 0x400]] * 4096]
	done
	echo "unpoison all ..."
	page-types -b hwpoison -x -Nl
}

iteration2() {
	local base=0x$(tail -n1 $TMPD/ppp | cut -f1)
	for i in $(seq 100) ; do
		soft_offline $[$[$base + $[RANDOM % 0x400]] * 4096]
		page-types -b hwpoison -x -Nl
	done
}

_control() {
	echo "page-types -b buddy -Nl | grep -P \"^10000\t\""
	page-types -b buddy -Nl | grep -P ^10000 | tee $TMPD/ppp

	if [ ! -s $TMPD/ppp ] ; then
		echo 'injection point not found'
		exit 1
	fi

	echo 1 > /proc/sys/vm/panic_on_oom
	echo 1 > /proc/sys/kernel/panic_on_warn
	# simple_case
	for i in $(seq 10) ; do
		iteration1
	done
	for i in $(seq 10) ; do
		iteration2
	done

	set_return_code EXIT
}
