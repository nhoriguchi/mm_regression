#! {"error-type" => "soft-offline"}
#! {"error-type" => "hard-offline", "dissolve" => "dequeue"}
#! {"error-type" => "hard-offline", "dissolve" => "free"}
#! {"error-type" => "hard-offline", "dissolve" => "unpoison"}
#! {"error-type" => "hard-offline", "multi-error" => "true"}

# Related to discussion
#   https://lore.kernel.org/linux-mm/7362f9ee-81fa-702a-7a03-1a91ecf0b58e@oracle.com/

TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED RAW_PAGE_POISONED EXIT"

<% if param["dissolve"] == "dequeue" %>
TEST_TYPE=wip
EXPECTED_RETURN_CODE="HUGETLB_POISONED RAW_PAGE_POISONED EXIT"
<% elsif param["dissolve"] == "free" %>
TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED RAW_PAGE_POISONED EXIT"
<% elsif param["dissolve"] == "unpoison" %>
TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED EXIT"
<% elsif param["dissolve"] == "hotremove" %>
TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED EXIT !"
<% elsif param["multi-error"] == "true" %>
TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED RAW_PAGE_POISONED MULTIPLE_RAW_PAGE_POISONED EXIT"
<% else %>
TEST_TYPE=wip
EXPECTED_RETURN_CODE="EXIT"
<% end %>

. $TRDIR/lib/mm.sh

_prepare() {
	sysctl vm.nr_hugepages=10
}

_cleanup() {
	sysctl vm.nr_hugepages=0
}

_control() {
	# reserving makes dissolve_free_huge_page fail
	test_alloc_generic -B hugetlb_anon -N 10 -L "mmap:wait_after access:wait_after" &
	local pid=$!

	grep -i huge /proc/meminfo

	page-types -b huge -rlN | grep -v offset | cut -f-3 | tee $TMPD/pagemap.1
	local targetpfn=0x$(head -n1 $TMPD/pagemap.1 | cut -f1)
	echo targetpfn: $targetpfn
	<% if param["error-type"] == "soft-offline" %>
	echo $[($targetpfn + 1) * 4096] > /sys/devices/system/memory/soft_offline_page
	<% elsif param["error-type"] == "hard-offline" %>
	echo $[($targetpfn + 1) * 4096] > /sys/devices/system/memory/hard_offline_page
	<% end %>
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.2

	# check hwpoison page is still a hugepage.
	if grep -q ___H_G_X___ $TMPD/pagemap.2 ; then
		set_return_code HUGETLB_POISONED
	else
		return 1
	fi

	# remove reservation
	kill -9 $pid

	<% if param["dissolve"] == "dequeue" %>
	# this allocation try to dequeue hwpoisoned free page in free list,
	# which causes deferred dissolve.
	test_alloc_generic -B hugetlb_anon -N 9 -L "mmap access:wait_after" &
	sleep 1
	# hwpoisoned hugepage should be dissolved here.
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3

	<% elsif param["dissolve"] == "free" %>
	sysctl vm.nr_hugepages=0
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3

	<% elsif param["dissolve"] == "unpoison" %>
	page-types -a ${targetpfn}+512 -b hwpoison -rlN -x | tee $TMPD/pagemap.3b
	sysctl vm.nr_hugepages=0
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3

	<% elsif param["dissolve"] == "hotremove" %>
	local blksize="0x$(cat /sys/devices/system/memory/block_size_bytes)"
	local targetblk=$[targetpfn / (blksize >> 12)]
	echo "target block: $targetblk"
	page-types -a ${targetpfn}+$[blksize >> 12] -r | tee $TMPD/pagemap.3b
	echo offline > /sys/devices/system/memory/memory$targetblk/state
	if [ "$?" -eq 0 ] ; then
		set_return_code MEMREMOVE_PASS
	else
		set_return_code MEMREMOVE_FAIL
	fi
	page-types -a ${targetpfn}+$[blksize >> 12] -r | tee $TMPD/pagemap.33

	<% elsif param["multi-error"] == "true" %>
	for i in $(seq 3 3 100) ; do
		echo $[($targetpfn + $i) * 4096] > /sys/devices/system/memory/hard_offline_page
	done
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.4
	sysctl vm.nr_hugepages=0
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3
	<% end %>

	grep -i huge /proc/meminfo

	local checkpfn="$(printf "%lx\n" $[$targetpfn + 1])"
	# hwpoisoned should not be a buddy page
	if grep -q -E "^${checkpfn}.*______X____" $TMPD/pagemap.3 ; then
		set_return_code RAW_PAGE_POISONED
	fi

	<% if param["multi-error"] == "true" %>
	checkpfn="$(printf "%lx\n" $[$targetpfn + 3])"
	# hwpoisoned should not be a buddy page
	if grep -q -E "^${checkpfn}.*______X____" $TMPD/pagemap.3 ; then
		set_return_code MULTIPLE_RAW_PAGE_POISONED
	fi
	<% end %>

	set_return_code EXIT
}
