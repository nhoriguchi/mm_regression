#! {"error-type" => "soft-offline"}
#! {"error-type" => "hard-offline", "dissolve" => "dequeue"}
#! {"error-type" => "hard-offline", "dissolve" => "free"}

TEST_TYPE=devel
EXPECTED_RETURN_CODE="HUGETLB_POISONED RAW_PAGE_POISONED EXIT"

. $TRDIR/lib/mm.sh

_prepare() {
	if [ ! -f "/sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages" ] ; then
		echo "no 1GB hugetlb directory. abort." >&2
		return 1
	fi

	echo 0 > /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages || return 1
	echo 4 > /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages || return 1
	echo 0 > /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_overcommit_hugepages

	find /sys/kernel/mm/hugepages/hugepages-1048576kB -type f | grep hugepages$ | while read f ; do
		echo "$f $(cat $f)"
	done

	if [ "$(cat /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages)" -lt 2 ] ; then
		echo "enough 1GB hugetlb not allocated. abort." >&2
		return 1
	fi
}

_cleanup() {
	echo 0 > /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages
}

_control() {
	local nr_gp=$(cat /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages)

	hugetlb_1gb_anon $nr_gp reserve "$TMPD/.pipe" &
	local pid=$!
	read -t10 line <> $TMPD/.pipe
	echo "--- $line ---"

	page-types -b compound_head,huge=compound_head,huge -rlN | grep -v offset | cut -f-3 | tee $TMPD/pagemap.1
	local targetpfn=0x$(head -n1 $TMPD/pagemap.1 | cut -f1)
	echo targetpfn: $targetpfn
	# local targetpfn="0x$(page-types -b compound_head,huge,mmap=compound_head,huge,mmap -Nrl | grep -v offset | head -n1 | cut -f1)"
	<% if param["error-type"] == "soft-offline" %>
	echo $[($targetpfn + 1) * 4096] > /sys/devices/system/memory/soft_offline_page
	<% elsif param["error-type"] == "hard-offline" %>
	echo $[($targetpfn + 1) * 4096] > /sys/devices/system/memory/hard_offline_page
	<% end %>
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.2

	# check hwpoison page is still a hugepage.
	if grep -q ___H_G_X___ $TMPD/pagemap.2 ; then
		set_return_code HUGETLB_POISONED
	else
		return 1
	fi

	<% if param["dissolve"] == "dequeue" %>
	# remove reservation
	kill -9 $pid
	# this allocation try to dequeue hwpoisoned free page in free list,
	# which causes deferred dissolve.
	hugetlb_1gb_anon $[nr_gp] allocate "$TMPD/.pipe" &
	read -t10 line <> $TMPD/.pipe
	echo "--- $line ---"
	# hwpoisoned hugepage should be dissolved here.
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3

	<% elsif param["dissolve"] == "free" %>
	# remove reservation
	kill -9 $pid
	echo 0 > /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages
	page-types -a ${targetpfn}+512 -rlN | tee $TMPD/pagemap.3

	<% elsif param["dissolve"] == "unpoison" %>
	echo "TODO: not implemented yet"
	<% end %>

	find /sys/kernel/mm/hugepages/hugepages-1048576kB -type f | grep hugepages$ | while read f ; do
		echo "$f $(cat $f)"
	done

	local checkpfn="$(printf "%lx\n" $[$targetpfn + 1])"
	# hwpoisoned should not be a buddy page
	if grep -q -E "^${checkpfn}.*______X____" $TMPD/pagemap.3 ; then
		set_return_code RAW_PAGE_POISONED
	fi

	set_return_code EXIT
}
