#! {"migtype" => "migratepages"}
#! {"migtype" => "mbind"}
#! {"migtype" => "move_pages"}

. $TRDIR/lib/setup_page_migration.sh

NUMA_NODE=2
HUGEPAGESIZE=2048 # kB
HUGETLB=300
EXPECTED_RETURN_CODE="EXIT"

MIGRATE_SRC=<%= param["migtype"] %>
PINGPONG_SRC=${MIGRATE_SRC}_pingpong

PINGPONG_DURATION=10

BACKEND="-B pagecache -B anonymous -B thp -B hugetlb_anon -B hugetlb_shmem"

run_migrate_pingpong() {
	<% if param["migtype"] == "migratepages" %>
	test_alloc_generic $BACKEND -N 10 -L "start mmap busyloop" > /dev/null 2>&1 &
	local pid=$!
	( while kill -0 $pid 2> /dev/null ; do
		  migratepages $pid 0 1 > /dev/null 2>&1
		  migratepages $pid 1 0 > /dev/null 2>&1
	  done ) &
	<% else %>
	echo "test_alloc_generic $BACKEND -N 10 -L 'start mmap access $PINGPONG_SRC' > /dev/null 2>&1 &"
	test_alloc_generic $BACKEND -N 10 -L "start mmap access $PINGPONG_SRC" > /dev/null 2>&1 &
	<% end %>
}

_control() {
	echo_log "start hugepage_pingpong"
	grep ^migrat /proc/vmstat | tee $TMPD/vmstat.pgmigrate1
	run_migrate_pingpong
	sleep $PINGPONG_DURATION
	pkill -SIGUSR1 -f test_alloc_generic
	grep ^migrat /proc/vmstat | tee $TMPD/vmstat.pgmigrate2
	set_return_code EXIT
}

_check() {
	true
}
