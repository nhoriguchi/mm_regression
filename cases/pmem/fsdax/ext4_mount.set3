#! {"type" => "fs"}
#! {"type" => "directory"}
#! {"type" => "file"}

. $TRDIR/lib/dax.sh

TEST_TYPE=devel

PMEMDIR=/mnt/pmemext4
NAMESPACE=
DEVNAME=

<% if param["type"] == "fs" %>
DAXOPT="-o dax"
<% else %>
# DAXOPT="-o dax=inode"
<% end %>

EXPECTED_RETURN_CODE="MOUNT_PASS DAX"

_prepare() {
	NAMESPACE=$(ndctl list | jq '.[] | select(.name == "$RECIPE_FILE") | .dev')
	if [ ! "$NAMESPACE" ] ; then
		ndctl create-namespace -f -m fsdax -s 6G -n "$RECIPE_FILE" > $TMPD/ns || return 1
	fi

	NAMESPACE="$(jq -r '.dev' $TMPD/ns)"
	DEVNAME="$(jq -r '.blockdev' $TMPD/ns)"

	mkdir -p $PMEMDIR
}

_cleanup() {
	rm -rf $PMEMDIR/*
	ndctl destroy-namespace $NAMESPACE --force
	rm -rf $PMEMDIR/
}

_control() {
	mkfs.ext4 /dev/$DEVNAME || return 1
	mount $DAXOPT /dev/$DEVNAME $PMEMDIR
	if [ "$?" -ne 0 ] ; then
		set_return_code MOUNT_FAIL
		return 1
	fi
	set_return_code MOUNT_PASS

	<% if param["type"] == "directory" %>
	xfs_io -c "chattr +x" $PMEMDIR
	<% elsif param["type"] == "file" %>
	set -x
	touch $PMEMDIR/test
	# chattr in older e2fsprogs might not support "+x" flags
	xfs_io -c "chattr +x" $PMEMDIR/test
	<% end %>
	./lib/test_dax $PMEMDIR/test 0x200000 write > $TMPD/out &
	local pid=$!
	sleep 1
	mount | grep $PMEMDIR > $TMPD/mount
	getfattr -d $PMEMDIR/test
	cp /proc/$pid/smaps $TMPD/smaps
	cp /proc/$pid/numa_maps $TMPD/numa_maps
	page-types -p $pid -Nrl > $TMPD/pagemap
	kill -9 $pid

	lsof | grep $DEVNAME
	umount -f /dev/$DEVNAME

	local pfn=$(grep ^700000000 $TMPD/pagemap | cut -f2)

	if [ "$pfn" ] && check_dax "0x$pfn" ; then
		set_return_code DAX
	else
		set_return_code NODAX
	fi
}
